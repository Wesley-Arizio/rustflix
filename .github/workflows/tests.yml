permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: tests
jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Run unit tests
        run: cargo t
  integration:
    env:
      TEST_CORE_DATABASE_URL: ${{ secrets.TEST_CORE_DATABASE_URL }}
      TEST_AUTH_DATABASE_URI: ${{ secrets.TEST_AUTH_DATABASE_URI }}
      TEST_AUTH_DATABASE_NAME: ${{ secrets.TEST_AUTH_DATABASE_NAME }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: setup postgres database
        run: docker-compose up -d auth_mongo postgres
        env:
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          AUTH_MONGODB_USERNAME: ${{ secrets.AUTH_MONGODB_USERNAME }}
          AUTH_MONGODB_PASSWORD: ${{ secrets.AUTH_MONGODB_PASSWORD }}
          AUTH_MONGODB_PORT: ${{ secrets.AUTH_MONGODB_PASSWORD }}
      - name: install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features native-tls,postgres
      - name: run sqlx migrations
        run: cd database && sqlx migrate run --database-url "${{ secrets.TEST_CORE_DATABASE_URL }}"
      - name: Run integration tests
        run: cargo t --features="integration"
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Create .env file
        run: cp .env.example .env
      - name: Build auth microservice image
        run: docker build -f auth.dockerfile -t rustflix-auth .
      - name: Build graphql-core microservice image
        run: docker build -f graphql-core.dockerfile -t rustflix-graphql-core .
      - name: setup services
        run: docker compose up -d
      - name: install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features native-tls,postgres
      - name: run sqlx migrations
        run: cd database && sqlx migrate run --database-url "${{ secrets.TEST_CORE_DATABASE_URL }}"
      - name: run e2e tests
        uses: grafana/k6-action@v0.2.0
        with:
          flags: --env GRAPHQL_CORE_URL="${{ secrets.GRAPHQL_CORE_URL }}"
          filename: tests/create_credential.js